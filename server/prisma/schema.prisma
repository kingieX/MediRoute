generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(NURSE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  shifts    Shift[]
  logs      EventLog[]
}

enum Role {
  ADMIN
  DOCTOR
  NURSE
}

model Department {
  id        String   @id @default(cuid())
  name      String   @unique
  capacity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  patients  Patient[]
  shifts    Shift[]
}

model Shift {
  id           String   @id @default(cuid())
  userId       String
  departmentId String
  startTime    DateTime
  endTime      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user        User       @relation(fields: [userId], references: [id])
  department  Department @relation(fields: [departmentId], references: [id])
}

model Patient {
  id           String   @id @default(cuid())
  name         String
  status       PatientStatus @default(WAITING)
  departmentId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  department   Department @relation(fields: [departmentId], references: [id])
}

enum PatientStatus {
  WAITING
  IN_TREATMENT
  DISCHARGED
}

model Alert {
  id        String   @id @default(cuid())
  type      String
  message   String
  resolved  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EventLog {
  id        String   @id @default(cuid())
  userId    String?
  action    String
  details   String?
  createdAt DateTime @default(now())

  // Relations
  user      User?     @relation(fields: [userId], references: [id])
}
